package com.example.travelinfo.ldbws;

//----------------------------------------------------
//
// Generated by www.easywsdl.com
// Version: 5.5.0.6
//
// Created by Quasar Development 
//
//---------------------------------------------------


import java.util.Hashtable;
import org.ksoap2.serialization.*;

public class DAAServiceDetails extends DAABaseServiceDetails implements KvmSerializable
{

    
    public DAAArrayOfAdhocAlert adhocAlerts;
    
    public DAAFormationData formation;
    
    public DAAArrayOfArrayOfCallingPoints_1 previousCallingPoints;
    
    public DAAArrayOfArrayOfCallingPoints_1 subsequentCallingPoints;
    

    
    
    @Override
    public void loadFromSoap(Object paramObj,DAAExtendedSoapSerializationEnvelope __envelope)
    {
        if (paramObj == null)
            return;
        AttributeContainer inObj=(AttributeContainer)paramObj;
        super.loadFromSoap(paramObj, __envelope);

    }

    @Override
    protected boolean loadProperty(PropertyInfo info,SoapObject soapObject,DAAExtendedSoapSerializationEnvelope __envelope)
    {
        Object obj = info.getValue();
        if (info.name.equals("adhocAlerts"))
        {
            if(obj!=null)
            {
                Object j = obj;
                this.adhocAlerts = (DAAArrayOfAdhocAlert)__envelope.get(j,DAAArrayOfAdhocAlert.class,false);
            }
            return true;
        }
        if (info.name.equals("formation"))
        {
            if(obj!=null)
            {
                Object j = obj;
                this.formation = (DAAFormationData)__envelope.get(j,DAAFormationData.class,false);
            }
            return true;
        }
        if (info.name.equals("previousCallingPoints"))
        {
            if(obj!=null)
            {
                Object j = obj;
                this.previousCallingPoints = (DAAArrayOfArrayOfCallingPoints_1)__envelope.get(j,DAAArrayOfArrayOfCallingPoints_1.class,false);
            }
            return true;
        }
        if (info.name.equals("subsequentCallingPoints"))
        {
            if(obj!=null)
            {
                Object j = obj;
                this.subsequentCallingPoints = (DAAArrayOfArrayOfCallingPoints_1)__envelope.get(j,DAAArrayOfArrayOfCallingPoints_1.class,false);
            }
            return true;
        }
        return super.loadProperty(info,soapObject,__envelope);
    }
    
    

    @Override
    public Object getProperty(int propertyIndex) {
        int count = super.getPropertyCount();
        //!!!!! If you have a compilation error here then you are using old version of ksoap2 library. Please upgrade to the latest version.
        //!!!!! You can find a correct version in Lib folder from generated zip file!!!!!
        if(propertyIndex==count+0)
        {
            return this.adhocAlerts!=null?this.adhocAlerts:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+1)
        {
            return this.formation!=null?this.formation:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+2)
        {
            return this.previousCallingPoints!=null?this.previousCallingPoints:SoapPrimitive.NullSkip;
        }
        if(propertyIndex==count+3)
        {
            return this.subsequentCallingPoints!=null?this.subsequentCallingPoints:SoapPrimitive.NullSkip;
        }
        return super.getProperty(propertyIndex);
    }


    @Override
    public int getPropertyCount() {
        return super.getPropertyCount()+4;
    }

    @Override
    public void getPropertyInfo(int propertyIndex, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info)
    {
        int count = super.getPropertyCount();
        if(propertyIndex==count+0)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "adhocAlerts";
            info.namespace= "http://thalesgroup.com/RTTI/2017-10-01/ldb/types";
        }
        if(propertyIndex==count+1)
        {
            info.type = DAAFormationData.class;
            info.name = "formation";
            info.namespace= "http://thalesgroup.com/RTTI/2017-10-01/ldb/types";
        }
        if(propertyIndex==count+2)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "previousCallingPoints";
            info.namespace= "http://thalesgroup.com/RTTI/2017-10-01/ldb/types";
        }
        if(propertyIndex==count+3)
        {
            info.type = PropertyInfo.VECTOR_CLASS;
            info.name = "subsequentCallingPoints";
            info.namespace= "http://thalesgroup.com/RTTI/2017-10-01/ldb/types";
        }
        super.getPropertyInfo(propertyIndex,arg1,info);
    }
    
    @Override
    public void setProperty(int arg0, Object arg1)
    {
    }

    
}

